// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "First Go app with swagger",
    "title": "A simple food odering app",
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "tags": [
          "Sample description"
        ],
        "operationId": "Show greetings to the api",
        "responses": {
          "200": {
            "description": "returns greetings to the API",
            "schema": {
              "description": "consumes actual greetings",
              "type": "string"
            }
          }
        }
      }
    },
    "/food": {
      "get": {
        "tags": [
          "foods"
        ],
        "operationId": "getFoods",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "since",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "list all foods",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/food"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "foods"
        ],
        "operationId": "addFood",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/food"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "create a food",
            "schema": {
              "$ref": "#/definitions/food"
            }
          }
        }
      }
    },
    "/food/{food_id}": {
      "put": {
        "tags": [
          "foods"
        ],
        "operationId": "updateFood",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/food"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "update a food",
            "schema": {
              "$ref": "#/definitions/food"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "foods"
        ],
        "operationId": "deleteFood",
        "responses": {
          "204": {
            "description": "delete a food"
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "name": "food_id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "food": {
      "type": "object",
      "required": [
        "name",
        "price",
        "available"
      ],
      "properties": {
        "available": {
          "type": "boolean"
        },
        "food_id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "price": {
          "type": "number",
          "format": "float"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "First Go app with swagger",
    "title": "A simple food odering app",
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "tags": [
          "Sample description"
        ],
        "operationId": "Show greetings to the api",
        "responses": {
          "200": {
            "description": "returns greetings to the API",
            "schema": {
              "description": "consumes actual greetings",
              "type": "string"
            }
          }
        }
      }
    },
    "/food": {
      "get": {
        "tags": [
          "foods"
        ],
        "operationId": "getFoods",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "since",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "list all foods",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/food"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "foods"
        ],
        "operationId": "addFood",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/food"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "create a food",
            "schema": {
              "$ref": "#/definitions/food"
            }
          }
        }
      }
    },
    "/food/{food_id}": {
      "put": {
        "tags": [
          "foods"
        ],
        "operationId": "updateFood",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/food"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "update a food",
            "schema": {
              "$ref": "#/definitions/food"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "foods"
        ],
        "operationId": "deleteFood",
        "responses": {
          "204": {
            "description": "delete a food"
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "name": "food_id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "food": {
      "type": "object",
      "required": [
        "name",
        "price",
        "available"
      ],
      "properties": {
        "available": {
          "type": "boolean"
        },
        "food_id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "price": {
          "type": "number",
          "format": "float"
        }
      }
    }
  }
}`))
}
