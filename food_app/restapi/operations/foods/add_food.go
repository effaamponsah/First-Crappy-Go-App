// Code generated by go-swagger; DO NOT EDIT.

package foods

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// AddFoodHandlerFunc turns a function with the right signature into a add food handler
type AddFoodHandlerFunc func(AddFoodParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AddFoodHandlerFunc) Handle(params AddFoodParams) middleware.Responder {
	return fn(params)
}

// AddFoodHandler interface for that can handle valid add food params
type AddFoodHandler interface {
	Handle(AddFoodParams) middleware.Responder
}

// NewAddFood creates a new http.Handler for the add food operation
func NewAddFood(ctx *middleware.Context, handler AddFoodHandler) *AddFood {
	return &AddFood{Context: ctx, Handler: handler}
}

/*AddFood swagger:route POST /food foods addFood

AddFood add food API

*/
type AddFood struct {
	Context *middleware.Context
	Handler AddFoodHandler
}

func (o *AddFood) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAddFoodParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
