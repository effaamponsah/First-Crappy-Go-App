consumes:
  - application/json
info:
  description: First Go app with swagger
  title: A simple food odering app
  version: 1.0.0
paths:
  /:
    get:
      produces:
        - text/plain
      tags: #a simple tag for route
        - Sample description
      operationId: Show greetings to the api #simple description to use in the doc
      responses:
        200:
          description: returns greetings to the API
          schema:
            type: string
            description: consumes actual greetings

  /food:
    get:
      tags:
        - foods
      operationId: getFoods
      parameters:
        - name: since
          in: query
          type: integer
          format: int64
        - name: limit
          in: query
          type: integer
          format: int32
          default: 20
      responses:
        200:
          description: list all foods
          schema:
            type: array
            items:
              $ref: "#/definitions/food"
    post:
      tags:
        - foods
      operationId: addFood
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/food"
      responses:
        201:
          description: create a food
          schema:
            $ref: "#/definitions/food"

  /food/{food_id}:
    parameters:
      - type: integer
        format: int64
        name: food_id
        in: path
        required: true
    put:
      tags:
        - foods
      operationId: updateFood
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/food"
      responses:
        200:
          description: update a food
          schema:
            $ref: "#/definitions/food"

produces:
  - application/json
schemes:
  - http
swagger: "2.0"
definitions:
  food:
    type: object
    required:
      - name
      - price
      - available
    properties:
      food_id:
        type: integer
        format: int64
        readOnly: true
      name:
        type: string
        minLength: 1
      price:
        type: number
        format: float
      available:
        type: boolean
